{"ast":null,"code":"var _jsxFileName = \"/Users/davidatwood/Documents/compsci/changeplusplus/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-on\",\n        children: /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      classname: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Billboard Hot 100 GUESSING GAME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Given three songs on the Billboard Hot 100, guess their relative ranking and see where YOU land on the scale from \\\"Way 2 Sexy\\\" ;) to \\\"A-O-K\\\" :/ to \\\"Ain't Shit\\\" >:(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction Card(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"card\",\n      onClick: props.onClick,\n      children: props.song\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.guess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Card;\n\nfunction Submit(props) {\n  if (!props.show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"submit\",\n    onClick: props.onClick,\n    children: \"SUBMIT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Submit;\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: Array(3).fill(null),\n      submitIsOption: false,\n      numCorrect: 0,\n      roundOver: false\n    };\n  }\n\n  handleGuess(i) {\n    const cards = this.state.cards.slice();\n\n    if (cards[i] !== 1) {\n      cards[i] = 1;\n\n      for (var j = 0; j < 3; j++) {\n        if (i !== j && cards[j] && cards[j] < 3) {\n          cards[j]++;\n        }\n      }\n\n      var noEmpty = false;\n\n      if (cards[0] && cards[1] && cards[2]) {\n        noEmpty = true;\n      }\n\n      this.setState({\n        cards: cards,\n        submitIsOption: noEmpty\n      });\n    }\n  }\n\n  handleSubmit() {\n    var c = this.state.cards.slice();\n    this.props.endGame(c);\n  }\n\n  renderCard(i) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      song: this.props.songsToGuess[i].track,\n      rank: this.props.songsToGuess[i].rank,\n      id: i,\n      guess: this.state.cards[i],\n      onClick: () => this.handleGuess(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const status = 'Click the songs from last to first to rank them!' + (this.state.submitIsOption ? ' Press submit when you\\'re ready to check your answers!' : '');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: [this.renderCard(0), this.renderCard(1), this.renderCard(2), /*#__PURE__*/_jsxDEV(Submit, {\n          show: this.state.submitIsOption,\n          onClick: () => this.handleSubmit()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      songs: [],\n      curSongs: [],\n      totalRight: 0,\n      gameOver: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/testAPI\").then(res => res.text()).then(res => JSON.parse(res)).then(res => this.setState({\n      songs: res\n    }));\n  }\n\n  finishRound(arr) {\n    var guess1 = arr.find(element => element === 1);\n    var guess2 = arr.find(element => element === 2);\n    var guess3 = arr.find(element => element === 3);\n    var song1 = this.state.curSongs[guess1].rank;\n    var song2 = this.state.curSongs[guess2].rank;\n    var song3 = this.state.curSongs[guess3].rank;\n    var guess1Correct = true ? song1 <= song2 && song1 <= song3 : false;\n    var guess3correct = true ? song3 >= song1 && song3 >= song2 : false;\n\n    if (guess1Correct && guess3correct) {\n      this.setState({\n        totalRight: 3\n      });\n    } else if (guess1Correct || guess3correct) {\n      this.setState({\n        totalRight: 1\n      });\n    }\n\n    this.setState({\n      gameOver: true\n    });\n  }\n\n  renderBoard() {\n    var threeSongs = [];\n\n    for (var i = 0; i < 3; i++) {\n      var ind = Math.floor(Math.random() * this.state.songs.length);\n      var s = this.state.songs[ind];\n      var song = {\n        track: \"\",\n        rank: -1\n      };\n      song.track = s;\n      song.rank = ind;\n      threeSongs.push(song);\n    }\n\n    this.setState({\n      curSongs: threeSongs\n    });\n    return /*#__PURE__*/_jsxDEV(Board, {\n      songsToGuess: threeSongs,\n      endGame: arr => this.finishRound(arr)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [this.renderBoard(), this.state.gameOver && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"You got \", this.state.numCorrect, \" right!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"Submit\");","map":{"version":3,"sources":["/Users/davidatwood/Documents/compsci/changeplusplus/client/src/App.js"],"names":["React","App","Component","render","Header","Card","props","onClick","song","guess","Submit","show","Board","constructor","state","cards","Array","fill","submitIsOption","numCorrect","roundOver","handleGuess","i","slice","j","noEmpty","setState","handleSubmit","c","endGame","renderCard","songsToGuess","track","rank","status","Game","songs","curSongs","totalRight","gameOver","componentDidMount","fetch","then","res","text","JSON","parse","finishRound","arr","guess1","find","element","guess2","guess3","song1","song2","song3","guess1Correct","guess3correct","renderBoard","threeSongs","ind","Math","floor","random","length","s","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component{\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <Header />\n        </div>\n        <div className=\"game-on\">\n          <Game />\n        </div>\n      </div>\n  )\n}\n}\n\nclass Header extends React.Component {\n  render() {\n    return(\n      <div classname=\"header\">\n        <h1>The Billboard Hot 100 GUESSING GAME</h1>\n        <h2>Given three songs on the Billboard Hot 100, guess their relative ranking and see where YOU land on the scale from \"Way 2 Sexy\" ;) to \"A-O-K\" :/ to \"Ain't Shit\" >:(</h2>\n      </div>\n    );\n  }\n}\n\nfunction Card(props) {\n  return (\n    <div>\n        <button className=\"card\" onClick={props.onClick} >\n          {props.song}\n        </button>\n        <h3>{props.guess}</h3>\n    </div>\n  );\n}\n\nfunction Submit(props) {\n  if (!props.show) {\n    return null;\n  }\n  return (\n    <button className=\"submit\" onClick={props.onClick} >\n          SUBMIT\n        </button>\n  )\n}\n\nclass Board extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      cards: Array(3).fill(null),\n      submitIsOption: false,\n      numCorrect: 0,\n      roundOver: false,\n    };\n  }\n\nhandleGuess(i) {\n  const cards = this.state.cards.slice();\n  if (cards[i] !== 1) {\n    cards[i] = 1;\n    for (var j = 0; j < 3; j++) {\n      if (i !== j && cards[j] && cards[j] < 3) {\n        cards[j]++;\n      }\n    }\n    var noEmpty = false;\n    if (cards[0] && cards[1] && cards[2]) {noEmpty = true;}\n    this.setState({cards: cards, submitIsOption: noEmpty})\n  }\n}\n\nhandleSubmit() {\n  var c = this.state.cards.slice()\n  this.props.endGame(c);\n}\n\n  renderCard(i) {\n    return ( \n      <Card \n        song={this.props.songsToGuess[i].track} \n        rank={this.props.songsToGuess[i].rank} \n        id={i} \n        guess={this.state.cards[i]}\n        onClick={() => this.handleGuess(i)}\n        />\n    );\n  }\n\n  render() {\n    const status = 'Click the songs from last to first to rank them!' + (this.state.submitIsOption ? ' Press submit when you\\'re ready to check your answers!' : '');\n    return(\n      <div>\n      <div className=\"status\">{status}</div>\n        <div className=\"options\">\n          {this.renderCard(0)}\n          {this.renderCard(1)}\n          {this.renderCard(2)}\n          <Submit show={this.state.submitIsOption} onClick={() => this.handleSubmit()}/>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      songs:[],\n      curSongs:[],\n      totalRight: 0,\n      gameOver: false,\n    };\n  }\n  componentDidMount() {\n    fetch(\"http://localhost:9000/testAPI\")\n      .then(res => res.text())\n      .then(res => JSON.parse(res))\n      .then(res => this.setState({songs: res}));\n  }\n\n  finishRound(arr) {\n    var guess1 = arr.find(element => element === 1);\n    var guess2 = arr.find(element => element === 2);\n    var guess3 = arr.find(element => element === 3);\n    var song1 = this.state.curSongs[guess1].rank;\n    var song2 = this.state.curSongs[guess2].rank;\n    var song3 = this.state.curSongs[guess3].rank;\n    var guess1Correct = true ? song1 <= song2 && song1 <= song3 : false;\n    var guess3correct = true ? song3 >= song1 && song3 >= song2 : false;\n    if (guess1Correct && guess3correct) {\n      this.setState({ totalRight: 3 });\n    } else if (guess1Correct || guess3correct) {\n      this.setState({ totalRight: 1});\n    }\n    this.setState({gameOver: true});\n  }\n\n  renderBoard() {\n    var threeSongs = [];\n    for (var i = 0; i < 3; i++) {\n      var ind = Math.floor(Math.random()*this.state.songs.length);\n      var s = this.state.songs[ind];\n      var song = {track: \"\", rank: -1};\n      song.track = s;\n      song.rank = ind;\n      threeSongs.push(song);\n    }\n    this.setState({curSongs: threeSongs});\n    return <Board songsToGuess = {threeSongs} endGame={(arr) => this.finishRound(arr)} />;\n  }\n\n  render() {\n    return (\n      <div className=\"game\">\n        {this.renderBoard()}\n        {this.state.gameOver &&\n            <h3>You got {this.state.numCorrect} right!</h3>\n          }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}